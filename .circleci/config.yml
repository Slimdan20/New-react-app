# This config was automatically generated from your source code
# Stacks detected: deps:node:.
version: 2.1
orbs:
  node: circleci/node@5
  browser-tools: circleci/browser-tools@1.2.3

jobs:
  build-node:
    # Build node project work
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Install Cypress
          command: npm install --save-dev cypress
      - run:
          name: Verify Cypress installation
          command: npx cypress --version

      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
      - browser-tools/install-chrome
      - run:
          name: Start Vite Dev Server
          command: npm run dev
          background: true
      - run: 
          name: Run Lighthouse CI
          command: npx lhci autorun --chrome-flags="--no-sandbox --ignore-certificate-errors"  
      - run:
           name: Install Xvfb
           command: sudo apt-get install -y xvfb
      - run: 
          name: Start Xvfb
          command: Xvfb :99 -screen 0 1920x1080x24 &
      - run:
           name: Set DISPLAY variable
           command: export DISPLAY=:99           
      - run:
           name: Install Percy CLI
           command: npm install --global @percy/cli
      - run:
           name: Run Cypress with Percy
           command: npx percy exec -- npx cypress run
  preview_deployment:
    docker:
      - image: circleci/node:latest
    environment:
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: npm install vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: npx vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: npx vercel build --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: npx vercel deploy --prebuilt --token=$VERCEL_TOKEN

  production_deployment:
    docker:
      - image: circleci/node:latest
    environment:
      VERCEL_ORG_ID: $VERCEL_ORG_ID
      VERCEL_PROJECT_ID: $VERCEL_PROJECT_ID
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: npm install vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: npx vercel pull --yes --environment=production --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: npx vercel build --prod --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: npx vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

workflows:
  version: 2
  preview_and_production:
    jobs:
      - preview_deployment:
          filters:
            branches:
              ignore: /main/
      - production_deployment:
          filters:
            branches:
              only: /main/

  